{
  "compilerOptions": {
    "rootDir": "./src",
    "outDir": "./build/js",
    "target": "ES6",
    "noEmitOnError": false,
    "module": "ESNext",
    // 타입스크립트 컴파일러가 모듈을 찾는 방법을 말한다.
    "moduleResolution": "Node",
    "esModuleInterop": true,
    // 컴파일할 때 사용되는 라이브러리들을 명시해준다.
    // 예를 들어, console 을 사용할 때 console type 은 dom 라이브러리에서 가져오는 것이다.
    "lib": ["ESNext", "DOM"],
    "strict": true,
    // "strictNullChecks": false
    "baseUrl": "./",
    "isolatedModules": true,
    "removeComments": true,
    // 먼저 js 로 개발을 하고 ts 로 변경을 할 때 파일 하나씩 작업을 이루는 상황에서 테스트를 용이하게 하기 위해
    // js 와 ts 을 함께 사용할 수 있도록 해준다.
    "allowJs": true,
    // allowJs 와 함께 작동. js 파일의 오류 보고. @ts-check 가 각 js 파일에 추가되는 것과 동일.
    // 즉, js 또한 ts 처럼 type 가 체크되는 기능이 수행되는 것이다.
    "checkJs": true,
    // import 파일 이름의 대소문자를 구별하여 가져오도록한다.
    "forceConsistentCasingInFileNames": true,
    "declaration": true
  },
  //
  "include": ["./src/**/*.ts"]
}
